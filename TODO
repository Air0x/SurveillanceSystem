Needed information for contributors:
====================================

Packet structure:
Client(C), Server(S).

DEMO:
====================================

[1 byte OpCode]|[?? bytes computer name in bytes]

For instance:
[0x00][0x41,0x41] C -> S. This is basically a Heartbeat (online-check) sent from a computer AA to the server to tell it that it is online.
The current communication model is entirely one-way

A demo of the website that was visited C -> S
[0x03][0x41,0x41][0x68,0x74,0x74,0x70.......]
0x03 is the OpCode that tells the server that it's sending a URL/website. 

=======================================

TODO:

*Instead of having the client send the heartbeat to the server, instead the server should send it to the client and then await a reply.

*[0x00][each computers name is saved in a list] If [computer name] fails to reply the supervisor gets alerted.

*Fix the recv buffer in the: "SkolanProjektServer / SkolanProjekt / Network_Classes / TCP_Globals.cs".
right now it's 1024 bytes just to make sure that all the packets fit in nicely. *Just let the buffer get the required size for storing the information*

*Calculate the max & min size possible for a computer name (The theoretically longest and shortest name, this should really be a constant!)

*clients computer name and send it to the server upon establishing a connection.

*Handle disconnects properly both server and client side.

*GUI improvments for the server interface.


22/04/2013
*Multiple connections.
*Client receive correctly HEATBEAT and WEBSITE OpCodes.
